[{"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\index.js":"1","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\App.js":"2","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\reportWebVitals.js":"3","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Containers\\PlotPage\\PlotPage.js":"4","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Containers\\HomePage\\HomePage.js":"5","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Components\\Header\\Header.js":"6","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Components\\Plot\\Plot.js":"7","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\lib\\canvasjs.react.js":"8","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\lib\\canvasjs.min.js":"9","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\utils.js":"10"},{"size":544,"mtime":1607805153077,"results":"11","hashOfConfig":"12"},{"size":428,"mtime":1607813137438,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3349,"mtime":1607883626265,"results":"15","hashOfConfig":"12"},{"size":155,"mtime":1607805058169,"results":"16","hashOfConfig":"12"},{"size":1068,"mtime":1607882541288,"results":"17","hashOfConfig":"12"},{"size":2788,"mtime":1607883671285,"results":"18","hashOfConfig":"12"},{"size":2080,"mtime":1607816288655,"results":"19","hashOfConfig":"12"},{"size":479381,"mtime":1607816288618,"results":"20","hashOfConfig":"12"},{"size":237,"mtime":1607881558149,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ipnl2i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\index.js",[],["47","48"],"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\App.js",[],"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\reportWebVitals.js",[],"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Containers\\PlotPage\\PlotPage.js",["49","50"],"import { Component, Fragment } from \"react\";\r\nimport Header from '../../Components/Header/Header'\r\nimport Plot from \"../../Components/Plot/Plot\";\r\nimport classes from './PlotPage.module.css';\r\nimport axios from 'axios';\r\n\r\nconst IMDB_TITLE_URL = \"https://www.imdb.com/title/\";\r\n\r\nclass PlotPage extends Component {\r\n    state = {\r\n        seasonsData : [],\r\n        showPlot: false,\r\n        maxRating: 10,\r\n    }\r\n\r\n    componentDidMount = () =>  {\r\n        this.makeRequest(\"how i met your mother\");\r\n    }\r\n\r\n    makeRequest = (query) => {\r\n        axios.get('http://localhost:8080/tvseries', { params : {\r\n            q : query\r\n        }})\r\n        .then( response => {\r\n            this.processResponse(response.data);\r\n        })\r\n        .catch (error => {\r\n            alert(error);\r\n        })\r\n    } \r\n\r\n    processResponse = (response) => {\r\n        const seasons = response.seasons;\r\n        var current_episode = 1;\r\n        var newSeasonsData = [];\r\n        var newMaxRating = 0;\r\n        var newMinRating = 10;\r\n\r\n        for (var i=0; i<seasons.length; i++){\r\n            var plot_points = [];\r\n            const season = seasons[i];\r\n            const episodes = season.episodes;\r\n\r\n            for (var j=0; j<episodes.length; j++) {\r\n                const episode = episodes[j];\r\n                const rating = episode.ratingValue;\r\n                const title = episode.name;\r\n                const number = episode.number;\r\n\r\n                plot_points.push({\r\n                    \"x\": current_episode,\r\n                    \"y\": rating,\r\n                    \"number\": episode.number,\r\n                    \"title\": episode.name,\r\n                    \"imdbId\": episode.imdbID,\r\n                    \"ratingValue\": episode.ratingValue,\r\n                    \"ratingCount\": episode.ratingCount,\r\n                    \"airdate\": episode.airdate\r\n                });\r\n\r\n                current_episode++;\r\n                if (rating > newMaxRating) {\r\n                    newMaxRating = rating;\r\n                } else if (rating < newMinRating) {\r\n                    newMinRating = rating;\r\n                }\r\n            }\r\n\r\n            newSeasonsData.push({\r\n                \"id\": season.number,\r\n                \"data\": plot_points\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            seasonsData : newSeasonsData,\r\n            showPlot: true,\r\n            maxRating: newMaxRating,\r\n            minRating: newMinRating\r\n        })\r\n\r\n        console.log(newSeasonsData);\r\n        console.log(newMaxRating)\r\n    }\r\n\r\n    onClickPoint = (node) => {\r\n        const imdbId = node.data.imdbId;\r\n        window.open(IMDB_TITLE_URL + imdbId, \"_blank\");\r\n    }\r\n\r\n\r\n    render() {\r\n        var plot = null;\r\n\r\n        if (this.state.showPlot) {\r\n            plot =  (\r\n                <div className={classes.Plot}>\r\n                    <Plot \r\n                        seasonsData={this.state.seasonsData}\r\n                        minRating={this.state.minRating}\r\n                        maxRating={this.state.maxRating}\r\n                        onClick={this.onClickPoint}/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Header onSubmit={this.makeRequest}/>\r\n                {plot}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlotPage;","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Containers\\HomePage\\HomePage.js",[],"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Components\\Header\\Header.js",["51"],"import classes from \"./Header.module.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { motionDefaultProps } from \"@nivo/core\"\r\nimport { useState } from \"react\"\r\n\r\nconst Header = (props) => {\r\n    const [query, setQuery] = useState();\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        props.onSubmit(query);\r\n        setQuery(\"\");        \r\n    }\r\n\r\n    return (\r\n        <header className={classes.Header}>\r\n            <form onSubmit={onSubmit} className={classes.Search}>\r\n                <input\r\n                    value={query}\r\n                    className={classes.SearchBar}\r\n                    placeholder={\"Enter TV Series name or IMDB ID\"}\r\n                    onChange={e => setQuery(e.target.value)}/>\r\n                <button type=\"submit\" className={classes.SearchButton}>\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </button>\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\Components\\Plot\\Plot.js",[],"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\lib\\canvasjs.react.js",["52"],"ï»¿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2020 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;",["53","54"],"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\lib\\canvasjs.min.js",[],"C:\\Users\\dportela\\Documents\\Repositories\\Mine\\plottv\\src\\utils.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":47,"column":23,"nodeType":"61","messageId":"62","endLine":47,"endColumn":28},{"ruleId":"59","severity":1,"message":"63","line":48,"column":23,"nodeType":"61","messageId":"62","endLine":48,"endColumn":29},{"ruleId":"59","severity":1,"message":"64","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","messageId":"68","fix":"69"},{"ruleId":"55","replacedBy":"70"},{"ruleId":"57","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'title' is assigned a value but never used.","Identifier","unusedVar","'number' is assigned a value but never used.","'motionDefaultProps' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"74","text":"75"},["72"],["73"],"no-global-assign","no-unsafe-negation",[-1,0],""]